{
    "collab_server" : "",
    "contents" : "---\noutput: github_document\nnumber_sections: true\n---\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n\n```{r, echo = FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\",\n  fig.path = \"README-\"\n)\n```\n\n# Purpose of corr2D\n\nThe package corr2D implements two-dimensional (2D) correlation analysis in R.\nIt allows the user to calculate and plot homo as well as hetero 2D correlation\nspectra from an input matrix containing the (preprocessed) spectra. The user\ncan freely choose the reference spectrum used to create the dynamic spectra,\nhow the perturbation vector should be handled, if and how the resulting 2D\nspectra should be scaled and how many cores should be used to calculate the\ncorrelation matrix.  \nThe plot functions offer a wide varity of options to customize the look\nof 2D spectra. In this context the appearance of the main spectrum can be\naltered and the 1D reference spectra as well as the colour legend can be\ncontrolled.  \nThe package also features an example dataset containing preprocessed FT-Raman\nspectra of a self-healing polymer sample.\n\n# How to use corr2D on a simple example\n\nFirst we need to make the package aviable and get an example dataset. For illustration purposes we use the\nFuranMale dataset from the present corr2D package.\n```{r}\nlibrary(\"corr2D\")\ndata(FuranMale, package = \"corr2D\")\n```\n\nAs the next step we calculate the homo 2D correlation spectra of the FuranMale dataset\nusing the function corr2d() and the first spectrum of the dataset as reference\nspectrum.\n```{r}\ntwod <- corr2d(FuranMale, Ref1 = FuranMale[1, ])\n```\n\nThe last step is to plot the resulting 2D correlation spectra. As an example we\nplot the synchronous correlation spectrum of the FuranMale dataset. The\nappearance of the 2D plot can be altered by i.e. using the xlab and ylab\noptions to control the labels at the x- and y-axes.\n```{r}\nplot_corr2d(twod, xlab = expression(paste(\"relative Wavenumber\" / cm^-1)),\n                  ylab = expression(paste(\"relative Wavenumber\" / cm^-1)))\n```          ",
    "created" : 1464689355482.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "603123989",
    "id" : "1E8B61FC",
    "lastKnownWriteTime" : 1464852062,
    "last_content_update" : 1464852062401,
    "path" : "C:/Users/ro63zic/Desktop/corr2d/README.Rmd",
    "project_path" : "README.Rmd",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}